{"version":3,"sources":["config.js","notefulContext.js","note/note.js","AddNote/AddNote.js","main/main.js","header/header.js","folder/folder.js","main-sidebar/mainSidebar.js","NoteSidebar/NoteSidebar.js","NoteMain/NoteMain.js","AddFolder/AddFolder.js","GoBack/GoBack.js","UpdateNote/UpdateNote.js","UpdateFolder/UpdateFolder.js","Error.js","App.js","index.js"],"names":["NotefulContext","React","createContext","notes","folders","deleteNote","addFolder","addNote","updateNote","deleteFolder","updateFolder","Note","handleDeleteNote","noteId","callback","fetch","config","method","headers","then","response","ok","Error","status","data","catch","error","console","className","to","this","props","id","title","date","onClick","context","Component","contextType","AddNote","validateTitle","setState","note","state","content","folder","length","errorMsg","handleCancel","history","push","value","e","preventDefault","folder_id","find","folder_name","body","JSON","stringify","json","err","folderOptions","map","i","key","onSubmit","handleSubmitNote","htmlFor","type","name","onChange","updateTitle","target","rows","cols","updateContent","updateFolderOption","required","Main","match","params","folderId","filter","Number","created_time","Header","Folder","onClickDelete","res","message","buttons","activeClassName","exact","withRouter","MainSidebar","NoteSidebar","onClickGoBack","NoteMain","AddFolder","handleSubmit","event","folderInfo","folderName","inputName","handleAddFolderName","GoBack","handleGoBack","UpdateNote","insertOriginalContent","defaultValue","UpdateFolder","Date","toISOString","handleUpdateFolderName","hasError","children","App","newNotes","handleAddFolder","newFolders","handleAddNote","handleUpdateNote","handleDeleteFolder","handleUpdateFolder","newFolderInfo","notesArray","foldersArray","Provider","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04ded63b.chunk.js","sourcesContent":["export default {\n    API_ENDPOINT: 'https://damp-bayou-07410.herokuapp.com/api'\n  }\n\n  ","import React from 'react';\n\nconst NotefulContext = React.createContext({\n    notes: [],\n    folders: [],\n    deleteNote: () => {},\n    addFolder: () => {},\n    addNote: () => {},\n    updateNote: () => {},\n    deleteFolder: () => {},\n    updateFolder: () => {}\n})\n\nexport default NotefulContext;","import React, { Component } from 'react';\nimport './note.css';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\nimport NotefulContext from '../notefulContext';\nimport PropTypes from 'prop-types';\n\nclass Note extends Component{\n    static contextType = NotefulContext;\n    handleDeleteNote = (noteId , callback) => {\n        fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n              'content-type': 'application/json'\n            },\n          })\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.status)\n            }\n        })\n        .then(data => {\n            callback(noteId);\n        })\n        .catch(error => console.error(error))\n    }\n\n    render(){\n        return (\n                <div className=\"note\">\n                    <Link to={`/notes/${this.props.id}`}>\n                        <h2>{this.props.title}</h2>\n                    </Link>\n                    <div className=\"note-second-row\">\n                        <p>Date modified on {this.props.date}</p>\n                        <div className=\"button-container\">\n                            <button className=\"update-button\"><Link to={`/notes/${this.props.id}/update`}>Update</Link></button>\n                            <button className=\"delete-button\" onClick={() => this.handleDeleteNote(this.props.id , this.context.deleteNote)}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n        )\n    }\n}\n\n/*\nNote.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    created_time: PropTypes.string.isRequired,\n    folder_id: PropTypes.string.isRequired\n}\n*/\n\nexport default Note;\n","import React, {Component} from 'react';\nimport NotefulContext from '../notefulContext';\nimport './AddNote.css'\nimport config from '../config'\n\nexport default class AddNote extends Component {\n\n    static contextType = NotefulContext;\n\n    constructor(props){\n        super(props);\n        this.state = {\n            note: {\n                title: \"\",\n                content: \"\",\n                folder: \"Super Important\",\n                errorMsg: \"\"\n            }\n        }\n    }\n\n    updateTitle(value) {\n        this.setState({\n            note: {\n                title: value,\n                content: this.state.note.content,\n                folder: this.state.note.folder\n            }\n        })\n    }\n\n    updateContent(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: value,\n                folder: this.state.note.folder\n            }\n        })\n    }  \n\n    updateFolderOption(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: value\n            }\n        })\n    }    \n\n    validateTitle = () => {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: this.state.note.folder,\n            }\n        })\n        if (this.state.note.title.length === 0){\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"Title is required!\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"\"\n                }\n            })\n        }\n    }\n\n\n    handleSubmitNote(e){\n        e.preventDefault();\n        this.validateTitle();\n        if (this.state.note.title.length !== 0){\n            const folder_id = (this.context.folders.find(folder => folder.folder_name === this.state.note.folder)).id\n            const data = {\n                title: this.state.note.title,\n                folder_id: folder_id,\n                content: this.state.note.content\n            }\n\n            fetch(`${config.API_ENDPOINT}/notes`, {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            })\n                .then(response => {\n                    if(!response.ok) {\n                        throw new Error( `Something went wrong. please try again later.`)\n                    }\n                    return response.json()\n                })\n                .then(data => {\n                    this.context.addNote(data);\n                    this.props.history.push('/')\n                } )\n                .catch(err => console.error(err))\n        }\n    }\n\n    handleCancel = () => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        const folderOptions = this.context.folders.map((folder,i) => <option key={i} value={folder.folder_name}>{folder.folder_name}</option>);\n        return(\n            <div className=\"add-note-container\">\n                <h2>Add New Note</h2>\n                <form onSubmit={(e) => {this.handleSubmitNote(e)}}>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteTitle'>Title: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteTitle' \n                            name='noteTitle' \n                            onChange={(e) => this.updateTitle(e.target.value)}>\n                        </input>\n                        <div className=\"error-message\">{this.state.note.errorMsg}</div>\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteContent'>Content: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteContent' \n                            name='noteContent' \n                            rows=\"10\" \n                            cols=\"30\"\n                            onChange={(e) => this.updateContent(e.target.value)}>\n                        </input>\n                    </div>    \n                    <div className=\"form-section\">\n                        <label htmlFor='selectFolder'>Save in which folder: </label>\n                        <select \n                            id='selectFolder' \n                            name='selectFolder'\n                            onChange={(e) => this.updateFolderOption(e.target.value)}\n                            required>\n                            <option value=\"\">Select</option>\n                            {folderOptions}\n                        </select>\n                    </div>                                            \n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Note from '../note/note';\nimport './main.css';\nimport NotefulContext from '../notefulContext';\nimport AddNote from '../AddNote/AddNote';\nimport { Link } from 'react-router-dom';\n\nclass Main extends Component {\n    static contextType = NotefulContext;\n\n    render(){\n        const noteList = this.props.match.params.folderId \n            ? this.context.notes.filter(note => note.folder_id === Number(this.props.match.params.folderId)) \n            : this.context.notes;\n        const notes = noteList.map(note => \n            <Note \n                key={note.id} \n                id={note.id}\n                title={note.title} \n                date={note.created_time}/>\n            )\n        return (\n            <div className=\"note-list-container\">\n                <div className=\"note-list\">\n                    {notes}\n                    <Link to={'/add-note'}><button className=\"add-button\">Add Note</button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css'\n\nfunction Header(){\n    return(\n        <header className='header'>\n            <h1 className='header-title'>\n                <Link to=\"/\">\n                    Noteful\n                </Link>\n            </h1>\n        </header>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './folder.css';\nimport { NavLink, Link } from 'react-router-dom';\nimport NotefulContext from '../notefulContext'\nimport PropTypes from 'prop-types';\nimport config from '../config';\nimport { withRouter } from 'react-router'\n\nclass Folder extends Component {\n    static contextType = NotefulContext;\n\n    onClickDelete = () => {\n        fetch(`${config.API_ENDPOINT}/folders/${this.props.id}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.error)\n            }\n            return response\n        })\n        .then(res => {\n            this.context.deleteFolder(this.props.id)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            console.error(err.message)\n        })\n    }\n\n    render(){\n        const buttons = Number(this.props.params) === this.props.id ? \n            <div className=\"folder-button-group\">\n                <Link to={`${this.props.id}/update`}><button>Update Folder Name</button></Link>\n                <button onClick={this.onClickDelete}>Delete Folder</button>\n            </div> \n            : null\n        return (\n            <NavLink activeClassName=\"active\" exact to={`/folders/${this.props.id}`}>\n                <li>{this.props.name}</li>\n                { buttons }\n            </NavLink>\n        )\n    }\n}\n\nexport default withRouter(Folder);\n\n/*\nFolder.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string\n}\n*/\n","import React, { Component } from 'react';\nimport Folder from '../folder/folder';\nimport './mainSidebar.css';\nimport NotefulContext from '../notefulContext';\nimport { Link } from 'react-router-dom';\n\nclass MainSidebar extends Component {\n    static contextType = NotefulContext;\n    \n    render(){\n        const folders = this.context.folders.map( folder => \n            <Folder \n                key={folder.id} \n                id={folder.id}\n                params={this.props.match.params.folderId ? this.props.match.params.folderId : null}\n                name={folder.folder_name}\n            /> )\n        return(\n            <aside className=\"sidebar\">\n                <ul>\n                    {folders}\n                </ul>\n                <div className=\"button-container\">\n                    <Link to={'/add-folder'}><button className='add-folder-button'>Add folder</button></Link>\n                </div>\n            </aside>\n        )\n    }\n}\n\n\nexport default MainSidebar;\n","import React, { Component } from 'react';\nimport Note from '../note/note';\nimport Folder from '../folder/folder';\nimport './NoteSidebar.css';\nimport NotefulContext from '../notefulContext';\nimport { withRouter } from 'react-router-dom';\n\nclass NoteSidebar extends Component{\n    static contextType = NotefulContext;\n    \n    onClickGoBack = () => {\n        this.props.history.push('/')\n    }\n\n    render(){\n        const folder = this.context.folders.length > 0 ? this.context.folders.find(folder => folder.id === (this.context.notes.find(note => note.id === Number(this.props.match.params.noteId)).folder_id)) : []\n\n        return (\n            <aside className=\"sidebar\">\n                <div className=\"button-container\">\n                    <button className='go-back-button' onClick={this.onClickGoBack}>Go Back</button>\n                    <p>{folder.folder_name}</p>\n                </div>\n            </aside>\n        )\n    }\n\n}\nexport default NoteSidebar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\nimport './NoteMain.css';\nimport NotefulContext from '../notefulContext';\nimport PropTypes from 'prop-types';\n\n\nclass NoteMain extends Component {\n    static contextType = NotefulContext;\n\n    handleDeleteNote = (noteId , callback) => {\n        fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n              'content-type': 'application/json'\n            },\n          })\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.status)\n            }\n        })\n        .then(data => {\n            this.props.history.push('/')\n            callback(noteId);\n        })\n        .catch(error => console.error(error))\n    }\n\n    render(){\n        const note = this.context.notes.length > 0 ? this.context.notes.find(note => note.id === Number(this.props.match.params.noteId)) : []\n        return(\n                <>\n                    <div className=\"note\">\n                        <Link to={`/notes/${note.id}`}>\n                            <h2>{note.title}</h2>\n                        </Link>\n                        <div className=\"note-second-row\">\n                            <p>Date modified on {note.created_time}</p>\n                            <div className=\"button-container\">\n                                <button className=\"update-button\"><Link to={`/notes/${note.id}/update`}>Update</Link></button>\n                                <button className=\"delete-button\" onClick={() => this.handleDeleteNote(note.id , this.context.deleteNote)}>Delete</button>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"note-content\">{note.content}</p>\n                </>\n        )\n    }\n}\n\nexport default NoteMain;\n\n/*\nNoteMain.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    folder: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n}\n*/","import React, {Component} from 'react';\nimport NotefulContext from '../notefulContext';\nimport config from '../config';\nimport './AddFolder.css';\n\n\nexport default class AddFolder extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            folderName: '',\n        }\n    }\n    static contextType = NotefulContext;\n\n    handleAddFolderName(inputName){\n        this.setState({\n            folderName: inputName\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const folderInfo = {\n            folder_name: event.target.folderName.value\n        }\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            body: JSON.stringify(folderInfo),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => {\n            if(!response.ok){\n                throw new Error(`Failed at adding new folder. Please try again later.`)\n            }\n            return response.json()\n        })\n        .then(data => {\n            this.props.history.push('/');\n            this.context.addFolder(data);\n        })\n        .catch(err => console.error(err))\n    }\n\n    handleCancel = (event) => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        return (\n            <div className=\"add-folder-form\">\n                <h2>Add New Folder</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"folderName\">Folder Name: </label>\n                        <input \n                            id=\"folderName\" \n                            name=\"folderName\" \n                            type=\"textarea\" \n                            onChange={(event) => this.handleAddFolderName(event.target.value)} required>\n                        </input>\n                    </div>\n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react';\nimport './GoBack.css'\n\nexport default class GoBack extends Component {\n\n    handleGoBack(e){\n        this.props.history.push('/')\n    }\n\n    render(){\n        return(\n            <div className=\"button-container\">\n                <button className=\"go-back-button\" onClick={ (e) => this.handleGoBack(e)}>&lt; Go Back</button>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport NotefulContext from '../notefulContext';\nimport './UpdateNote.css'\nimport config from '../config'\n\nexport default class UpdateNote extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            note: {\n                title: \"\",\n                content: \"\",\n                folder: \"\",\n                errorMsg: \"\"\n            }\n        }\n    }\n\n    static contextType = NotefulContext;\n\n    updateTitle(value) {\n        this.setState({\n            note: {\n                title: value,\n                content: this.state.note.content,\n                folder: this.state.note.folder\n            }\n        })\n    }\n\n    updateContent(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: value,\n                folder: this.state.note.folder\n            }\n        })\n    }  \n\n    updateFolderOption(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: value\n            }\n        })\n    }    \n\n    validateTitle = () => {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: this.state.note.folder,\n            }\n        })\n        if (this.state.note.title.length === 0){\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"Title is required!\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"\"\n                }\n            })\n        }\n    }\n\n    handleSubmitNote(e){\n        e.preventDefault();\n        this.validateTitle();\n        if (this.state.note.title.length !== 0){\n            const folder_id = (this.context.folders.find(folder => folder.folder_name === this.state.note.folder)).id\n            const data = {\n                title: this.state.note.title,\n                folder_id: folder_id,\n                content: this.state.note.content\n            }\n\n            fetch(`${config.API_ENDPOINT}/notes/${this.props.match.params.noteId}`, {\n                method: 'PATCH',\n                body: JSON.stringify(data),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            })\n                .then(response => {\n                    if(!response.ok) {\n                        throw new Error( `Something went wrong. please try again later.`)\n                    }\n                })\n                .then(data => {\n                    this.context.updateNote();\n                    this.props.history.push('/')\n                } )\n                .catch(err => console.error(err))\n        }\n    }\n\n    handleCancel = () => {\n        this.props.history.push('/');\n    }\n\n    insertOriginalContent = (content) => {\n        this.setState({\n            note: {\n                title: content.title,\n                content: content.content,\n                folder: this.context.folders.find(folder => folder.id === content.folder_id).folder_name,\n                errorMsg: \"\"\n            }\n        })\n    }\n\n    componentDidMount(){\n        fetch(`${config.API_ENDPOINT}/notes/${this.props.match.params.noteId}`)\n            .then(res => {\n                if (!res.ok){\n                    throw new Error(res.status)\n                }\n                return res.json()\n            })\n            .then(note => {\n                this.insertOriginalContent(note)\n            })\n            .catch(error => {\n                this.setState({\n                    note: {\n                        title: \"\",\n                        content: \"\",\n                        folder: \"\",\n                        errorMsg: error.message\n                    }\n                })\n            })\n    }\n\n    render(){\n        const folderOptions = this.context.folders.map((folder,i) => <option key={i} value={folder.folder_name}>{folder.folder_name}</option>);\n        return(\n            <div className=\"update-note-container\">\n                <h2>Update Note</h2>\n                <form onSubmit={(e) => {this.handleSubmitNote(e)}}>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteTitle'>Title: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteTitle' \n                            name='noteTitle' \n                            defaultValue={this.state.note.title}\n                            onChange={(e) => this.updateTitle(e.target.value)}>\n                        </input>\n                        <div className=\"error-message\">{this.state.note.errorMsg}</div>\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteContent'>Content: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteContent' \n                            name='noteContent' \n                            rows=\"10\" \n                            cols=\"30\"\n                            defaultValue={this.state.note.content}\n                            onChange={(e) => this.updateContent(e.target.value)}>\n                        </input>\n                    </div>    \n                    <div className=\"form-section\">\n                        <label htmlFor='selectFolder'>Save in which folder: </label>\n                        <select \n                            id='selectFolder' \n                            name='selectFolder'\n                            onChange={(e) => this.updateFolderOption(e.target.value)}\n                            required>\n                            <option value=\"\">Select</option>\n                            {folderOptions}\n                        </select>\n                    </div>                                            \n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport NotefulContext from '../notefulContext'\nimport config from '../config';\nimport './UpdateFolder.css'\n\nclass UpdateFolder extends Component {\n    static contextType = NotefulContext\n\n    state = {\n        folderName: \"\"\n    }\n\n    handleUpdateFolderName(inputName){\n        this.setState({\n            folderName: inputName\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const folderInfo = {\n            id: this.props.match.params.folderId,\n            folder_name: event.target.folderName.value,\n            created_time: new Date().toISOString()\n        }\n        fetch(`${config.API_ENDPOINT}/folders/${this.props.match.params.folderId}`, {\n            method: 'PATCH',\n            body: JSON.stringify(folderInfo),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => {\n            if(!response.ok){\n                throw new Error(`Failed at updating new folder. Please try again later.`)\n            }\n            return response\n        })\n        .then(data => {\n            this.props.history.push('/');\n            this.context.updateFolder(folderInfo);\n        })\n        .catch(err => console.error(err))\n    }\n\n    handleCancel = (event) => {\n        this.props.history.push('/');\n    }\n\n    insertOriginalContent = (folder) => {\n        this.setState({\n            folderName: folder.folder_name\n        })\n    }\n\n    componentDidMount(){\n        fetch(`${config.API_ENDPOINT}/folders/${this.props.match.params.folderId}`)\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.error)\n            }\n            return response.json()\n        })\n        .then(folder => {\n            this.insertOriginalContent(folder)\n        })\n        .catch(err => {\n            console.error(err.message)\n        })\n    }\n\n\n    render(){\n        return (\n            <div className=\"update-folder-form\">\n                <h2>Update New Folder</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"folderName\">Folder Name: </label>\n                        <input \n                            id=\"folderName\" \n                            name=\"folderName\" \n                            type=\"textarea\" \n                            defaultValue={this.state.folderName}\n                            onChange={(event) => this.handleUpdateFolderName(event.target.value)} \n                            required>\n                        </input>\n                    </div>\n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateFolder;\n","import React , {Component} from 'react';\n\nexport default class Error extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    getDerivedStateFromError(error){\n        return {hasError: true};\n    }\n\n    render(){\n        if (this.state.hasError){\n            return (\n                <h2>Something went wrong. Please try again.</h2>\n            )\n        }\n        return this.props.children\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './main/main';\nimport { Route } from 'react-router-dom';\n//import STORE from './store.js';\nimport Header from './header/header';\nimport MainSidebar from './main-sidebar/mainSidebar';\nimport NoteSidebar from './NoteSidebar/NoteSidebar';\nimport NoteMain from './NoteMain/NoteMain';\nimport NotefulContext from './notefulContext';\nimport AddFolder from './AddFolder/AddFolder';\nimport AddNote from './AddNote/AddNote';\nimport GoBack from './GoBack/GoBack';\nimport UpdateNote from './UpdateNote/UpdateNote';\nimport UpdateFolder from './UpdateFolder/UpdateFolder';\nimport Error from './Error';\nimport config from './config'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      folders: [],\n      notes: [],\n    }\n  }\n  \n  handleDeleteNote = (noteId) => {\n    const newNotes = this.state.notes.filter(note => note.id !== noteId);\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  handleAddFolder = (folder) => {\n    const newFolders = [...this.state.folders, folder ]\n    this.setState({\n      folders: newFolders\n    })\n  }\n\n  handleAddNote = (note) => {\n    const newNotes = [...this.state.notes, note];\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  handleUpdateNote = () => {\n    fetch(`${config.API_ENDPOINT}/notes`)\n      .then(response=> {\n        if(!response.ok){\n          throw new Error(response.status)\n        }\n        return (response.json())\n      })\n      .then(data => {\n        this.setState({\n          notes: data\n        })\n      })\n      .catch(err => console.error(err))\n  }\n\n  handleDeleteFolder = (folderId) => {\n    const newFolders = this.state.folders.filter(folder => folder.id !== folderId )\n    const newNotes = this.state.notes.filter(note => note.folder_id !== folderId)\n    this.setState({\n      folders: newFolders,\n      notes: newNotes\n    })\n  }\n\n  handleUpdateFolder = (newFolderInfo) => {\n    const newFolders = this.state.folders.map(folder => (folder.id !== Number(newFolderInfo.id)) ? folder : newFolderInfo )\n    this.setState({\n      folders: newFolders\n    })\n  }\n\n  componentDidMount(){\n    let notesArray = []\n    let foldersArray = []\n\n    fetch(`${config.API_ENDPOINT}/notes`)\n      .then(response=> {\n        if(!response.ok){\n          throw new Error(response.status)\n        }\n        return (response.json())\n      })\n      .then(data => {\n        notesArray = data\n      })\n      .then(response => {\n        fetch(`${config.API_ENDPOINT}/folders`)\n          .then(response => {\n            if(!response.ok){\n              throw new Error(response.status)\n            }\n            return (response.json())\n          })\n          .then(data => {\n            foldersArray = data\n          })\n          .then(response => {\n            this.setState({\n              folders: foldersArray,\n              notes: notesArray\n            })\n          })\n          .catch(err => console.error(err))\n      })\n      .catch(err => console.error(err))\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NotefulContext.Provider value={{\n          folders: this.state.folders,\n          notes: this.state.notes,\n          deleteNote: this.handleDeleteNote,\n          addFolder: this.handleAddFolder,\n          addNote: this.handleAddNote,\n          updateNote: this.handleUpdateNote,\n          deleteFolder: this.handleDeleteFolder,\n          updateFolder: this.handleUpdateFolder\n        }}>\n          <Header />\n          <div className='content-section'>\n            <nav>\n              <Error>\n                <Route exact path='/' component={MainSidebar} />\n                <Route exact path='/folders/:folderId' component={MainSidebar} />\n                <Route exact path='/notes/:noteId' component={NoteSidebar} />\n                <Route path='/add-folder' component={GoBack} />     \n                <Route path='/add-note' component={GoBack} />\n                <Route path='/notes/:noteId/update' component={GoBack} />\n                <Route path='/folders/:folderId/update' component={GoBack} />\n              </Error>      \n            </nav>\n            <main>\n              <Error>\n                <Route exact path='/' component={Main} />\n                <Route exact path='/folders/:folderId' component={Main} />\n                <Route exact path='/notes/:noteId' component={NoteMain}/>\n                <Route path='/add-folder' component={AddFolder} />     \n                <Route path='/add-note' component={AddNote} />  \n                <Route path='/notes/:noteId/update' component={UpdateNote} />  \n                <Route path='/folders/:folderId/update' component={UpdateFolder} />\n              </Error>\n            </main>\n          </div>\n        </NotefulContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n    );\n"],"sourceRoot":""}