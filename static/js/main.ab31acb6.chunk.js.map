{"version":3,"sources":["config.js","notefulContext.js","note/note.js","AddNote/AddNote.js","main/main.js","header/header.js","folder/folder.js","main-sidebar/mainSidebar.js","NoteSidebar/NoteSidebar.js","NoteMain/NoteMain.js","AddFolder/AddFolder.js","GoBack/GoBack.js","Error.js","App.js","index.js"],"names":["NotefulContext","React","createContext","notes","folders","deleteNote","addFolder","addNote","Note","handleDeleteNote","noteId","callback","console","log","fetch","config","method","headers","then","response","ok","Error","status","json","data","catch","error","className","to","this","props","id","title","date","onClick","context","Component","contextType","AddNote","validateTitle","setState","note","state","content","folder","length","errorMsg","handleCancel","history","push","value","e","preventDefault","uuid","v4","formattedTime","Date","toISOString","folderId","find","name","modified","body","JSON","stringify","err","folderOptions","map","i","key","onSubmit","handleSubmitNote","htmlFor","type","onChange","updateTitle","target","rows","cols","updateContent","updateFolderOption","Main","match","params","filter","Header","Folder","activeClassName","exact","MainSidebar","NoteSidebar","onClickGoBack","withRouter","NoteMain","AddFolder","handleSubmit","event","folderInfo","folderName","inputName","handleAddFolderName","required","GoBack","handleGoBack","hasError","children","App","newNotes","handleAddFolder","newFolders","handleAddNote","Provider","path","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ab31acb6.chunk.js","sourcesContent":["export default {\n    API_ENDPOINT: 'http://localhost:9090'\n  }\n\n  ","import React from 'react';\n\nconst NotefulContext = React.createContext({\n    notes: [],\n    folders: [],\n    deleteNote: () => {},\n    addFolder: () => {},\n    addNote: () => {}\n})\n\nexport default NotefulContext;","import React, { Component } from 'react';\nimport './note.css';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\nimport NotefulContext from '../notefulContext';\nimport PropTypes from 'prop-types';\n\nclass Note extends Component{\n    static contextType = NotefulContext;\n\n    handleDeleteNote = (noteId , callback) => {\n        console.log(noteId)\n        fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n              'content-type': 'application/json'\n            },\n          })\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.status)\n            }\n            return response.json()\n        })\n        .then(data => {\n            console.log(noteId)\n            callback(noteId);\n        })\n        .catch(error => console.error(error))\n    }\n\n    render(){\n        return (\n                <div className=\"note\">\n                    <Link to={`/note/${this.props.id}`}>\n                        <h2>{this.props.title}</h2>\n                    </Link>\n                    <div className=\"note-second-row\">\n                        <p>Date modified on {this.props.date}</p>\n                        <button className=\"delete-button\" onClick={() => this.handleDeleteNote(this.props.id , this.context.deleteNote)}>Delete Note</button>\n                    </div>\n                </div>\n\n        )\n    }\n}\n\nNote.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    folder: PropTypes.string.isRequired\n}\n\nexport default Note;\n","import React, {Component} from 'react';\nimport NotefulContext from '../notefulContext';\nimport uuid from 'uuid';\nimport './AddNote.css'\nimport config from '../config'\n\nexport default class AddNote extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            note: {\n                title: \"\",\n                content: \"\",\n                folder: \"Important\",\n                errorMsg: \"\"\n            }\n        }\n    }\n\n    static contextType = NotefulContext;\n\n    updateTitle(value) {\n        this.setState({\n            note: {\n                title: value,\n                content: this.state.note.content,\n                folder: this.state.note.folder\n            }\n        })\n    }\n\n    updateContent(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: value,\n                folder: this.state.note.folder\n            }\n        })\n    }  \n\n    updateFolderOption(value) {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: value\n            }\n        })\n    }    \n\n    validateTitle = () => {\n        this.setState({\n            note: {\n                title: this.state.note.title,\n                content: this.state.note.content,\n                folder: this.state.note.folder,\n            }\n        })\n        if (this.state.note.title.length === 0){\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"Title is required!\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                note: {\n                    title: this.state.note.title,\n                    content: this.state.note.content,\n                    folder: this.state.note.folder,\n                    errorMsg: \"\"\n                }\n            })\n        }\n    }\n\n    handleSubmitNote(e){\n        e.preventDefault();\n        this.validateTitle();\n        const noteId = uuid.v4();\n        const localTime = new Date();\n        const formattedTime = localTime.toISOString();\n        const folderId = (this.context.folders.find(folder => folder.name === this.state.note.folder)).id\n        const data = {\n            id: noteId,\n            name: this.state.note.title,\n            modified: formattedTime,\n            folderId: folderId,\n            content: this.state.note.content\n        }\n        console.log(data)\n\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n            .then(response => {\n                if(!response.ok) {\n                    throw new Error( `Something went wrong. please try again later.`)\n                }\n                return response.json()\n            })\n            .then(data => {\n                this.context.addNote(data);\n                this.props.history.push('/')\n            } )\n            .catch(err => console.error(err))\n    }\n\n    handleCancel = () => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        const folderOptions = this.context.folders.map((folder,i) => <option key={i} value={folder.name}>{folder.name}</option>);\n        return(\n            <div className=\"add-note-container\">\n                <h2>Add New Note</h2>\n                <form onSubmit={(e) => {this.handleSubmitNote(e)}}>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteTitle'>Title: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteTitle' \n                            name='noteTitle' \n                            onChange={(e) => this.updateTitle(e.target.value)}>\n                        </input>\n                        <div className=\"error-message\">{this.state.note.errorMsg}</div>\n                    </div>\n                    <div className=\"form-section\">\n                        <label htmlFor='noteContent'>Content: </label>\n                        <input \n                            type=\"textarea\" \n                            id='noteContent' \n                            name='noteContent' \n                            rows=\"10\" \n                            cols=\"30\"\n                            onChange={(e) => this.updateContent(e.target.value)}>\n                        </input>\n                    </div>    \n                    <div className=\"form-section\">\n                        <label htmlFor='selectFolder'>Save in which folder: </label>\n                        <select \n                            id='selectFolder' \n                            name='selectFolder' \n                            onChange={(e) => this.updateFolderOption(e.target.value)}>>\n                            {folderOptions}\n                        </select>\n                    </div>                                            \n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Note from '../note/note';\nimport './main.css';\nimport NotefulContext from '../notefulContext';\nimport AddNote from '../AddNote/AddNote';\nimport { Link } from 'react-router-dom';\n\nclass Main extends Component {\n    static contextType = NotefulContext;\n\n    render(){\n        const noteList = this.props.match.params.folderId \n            ? this.context.notes.filter(note => note.folderId === this.props.match.params.folderId) \n            : this.context.notes;\n        const notes = noteList.map(note => \n            <Note \n                key={note.id} \n                id={note.id}\n                title={note.name} \n                date={note.modified}/>\n            )\n        return (\n            <div className=\"note-list-container\">\n                <div className=\"note-list\">\n                    {notes}\n                    <Link to={'/add-note'}><button className=\"add-button\">Add Note</button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css'\n\nfunction Header(){\n    return(\n        <header className='header'>\n            <h1 className='header-title'>\n                <Link to=\"/\">\n                    Noteful\n                </Link>\n            </h1>\n        </header>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './folder.css';\nimport { NavLink } from 'react-router-dom';\nimport NotefulContext from '../notefulContext'\nimport PropTypes from 'prop-types';\n\nclass Folder extends Component {\n    static contextType = NotefulContext;\n    render(){\n        return (\n            <NavLink activeClassName=\"active\" exact to={`/folder/${this.props.id}`}>\n                <li>{this.props.name}</li>\n            </NavLink>\n        )\n    }\n}\n\nexport default Folder;\n\nFolder.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string\n}\n","import React, { Component } from 'react';\nimport Folder from '../folder/folder';\nimport './mainSidebar.css';\nimport NotefulContext from '../notefulContext';\nimport { Link } from 'react-router-dom';\n\nclass MainSidebar extends Component {\n    static contextType = NotefulContext;\n    \n    render(){\n        const folders = this.context.folders.map( folder => \n            <Folder \n                key={folder.id} \n                id={folder.id}\n                name={folder.name}\n            /> )\n        return(\n            <aside className=\"sidebar\">\n                <ul>\n                    {folders}\n                </ul>\n                <div className=\"button-container\">\n                    <Link to={'/add-folder'}><button className='add-folder-button'>Add folder</button></Link>\n                </div>\n            </aside>\n        )\n    }\n}\n\nexport default MainSidebar;","import React, {Component} from 'react';\nimport './NoteSidebar.css';\nimport { withRouter } from 'react-router-dom';\nimport NotefulContext from '../notefulContext';\n\n\nclass NoteSidebar extends Component{\n    static contextType = NotefulContext;\n    \n\n    onClickGoBack = () => {\n        this.props.history.push('/')\n    }\n\n    render(){\n        const folder = this.context.folders.find(folder => folder.id === (this.context.notes.find(note => note.id === this.props.match.params.noteId).folderId))\n\n        return(\n            <aside className=\"sidebar\">\n                <div className=\"button-container\">\n                    <button className='go-back-button' onClick={this.onClickGoBack}>Go Back</button>\n                    <p>{folder.name}</p>\n                </div>\n            </aside>\n        )\n    }\n}\n\nexport default withRouter(NoteSidebar);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\nimport './NoteMain.css';\nimport NotefulContext from '../notefulContext';\nimport PropTypes from 'prop-types';\n\n\nclass NoteMain extends Component {\n    static contextType = NotefulContext;\n\n    handleDeleteNote = (noteId , callback) => {\n        console.log(noteId)\n        fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n              'content-type': 'application/json'\n            },\n          })\n        .then(response => {\n            if (!response.ok){\n                throw new Error(response.status)\n            }\n            return response.json()\n        })\n        .then(data => {\n            console.log('innoteid')\n            this.props.history.push('/')\n            callback(noteId);\n        })\n        .catch(error => console.error(error))\n    }\n\n    render(){\n        const note = this.context.notes.find(note => note.id === this.props.match.params.noteId)\n        return(\n                <>\n                    <div className=\"note\">\n                        <Link to={`/note/${note.id}`}>\n                            <h2>{note.name}</h2>\n                        </Link>\n                        <div className=\"note-second-row\">\n                            <p>Date modified on {note.modified}</p>\n                            <button className=\"delete-button\" onClick={() => this.handleDeleteNote(note.id , this.context.deleteNote)}>Delete Note</button>\n                        </div>\n                    </div>\n                    <p className=\"note-content\">{note.content}</p>\n                </>\n        )\n    }\n}\n\nexport default NoteMain;\n\nNoteMain.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    folder: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n}\n","import React, {Component} from 'react';\nimport uuid from 'uuid';\nimport NotefulContext from '../notefulContext';\nimport config from '../config';\nimport './AddFolder.css';\n\n\nexport default class AddFolder extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            folderName: '',\n        }\n    }\n    static contextType = NotefulContext;\n\n    handleAddFolderName(inputName){\n        this.setState({\n            folderName: inputName\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const folderId = uuid.v4();\n        const folderInfo = {\n            id: folderId,\n            name: event.target.folderName.value\n        }\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            body: JSON.stringify(folderInfo),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => {\n            if(!response.ok){\n                throw new Error(`Failed at adding new folder. Please try again later.`)\n            }\n            return response.json()\n        })\n        .then(data => {\n            this.props.history.push('/');\n            this.context.addFolder(data);\n        })\n        .catch(err => console.error(err))\n    }\n\n    handleCancel = (event) => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        return (\n            <div className=\"add-folder-form\">\n                <h2>Add New Folder</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"folderName\">Folder Name: </label>\n                        <input \n                            id=\"folderName\" \n                            name=\"folderName\" \n                            type=\"textarea\" \n                            onChange={(event) => this.handleAddFolderName(event.target.value)} required>\n                        </input>\n                    </div>\n                    <div className=\"button-group\">\n                        <button type='submit'>Save</button>\n                        <button onClick={this.handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react';\nimport './GoBack.css'\n\nexport default class GoBack extends Component {\n\n    handleGoBack(e){\n        this.props.history.push('/')\n    }\n\n    render(){\n        return(\n            <div className=\"button-container\">\n                <button className=\"go-back-button\" onClick={ (e) => this.handleGoBack(e)}>&lt; Go Back</button>\n            </div>\n        )\n    }\n}","import React , {Component} from 'react';\n\nexport default class Error extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    getDerivedStateFromError(error){\n        return {hasError: true};\n    }\n\n    render(){\n        if (this.state.hasError){\n            return (\n                <h2>Something went wrong. Please try again.</h2>\n            )\n        }\n        return this.props.children\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './main/main';\nimport { Route } from 'react-router-dom';\n//import STORE from './store.js';\nimport Header from './header/header';\nimport MainSidebar from './main-sidebar/mainSidebar';\nimport NoteSidebar from './NoteSidebar/NoteSidebar';\nimport NoteMain from './NoteMain/NoteMain';\nimport NotefulContext from './notefulContext';\nimport AddFolder from './AddFolder/AddFolder';\nimport AddNote from './AddNote/AddNote';\nimport GoBack from './GoBack/GoBack';\nimport Error from './Error';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      folders: [],\n      notes: [],\n    }\n  }\n  \n  handleDeleteNote = (noteId) => {\n    const newNotes = this.state.notes.filter(note => note.id !== noteId);\n    console.log(newNotes);\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  handleAddFolder = (folder) => {\n    const newFolders = [...this.state.folders, folder ]\n    this.setState({\n      folders: newFolders\n    })\n  }\n\n  handleAddNote = (note) => {\n    const newNotes = [...this.state.notes, note];\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:9090/folders')\n      .then(response => {\n        if(!response.ok){\n          throw new Error(response.status)\n        }\n        return (response.json())\n      })\n      .then(data => {\n        this.setState({\n          folders: data\n        })\n        fetch('http://localhost:9090/notes')\n          .then(response=> {\n            if(!response.ok){\n              throw new Error(response.status)\n            }\n            return (response.json())\n          })\n          .then(data => {\n            this.setState({\n              notes: data\n            })\n          })\n          .catch(err => console.error(err))\n      })\n      .catch(err => console.error(err))\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NotefulContext.Provider value={{\n          folders: this.state.folders,\n          notes: this.state.notes,\n          deleteNote: this.handleDeleteNote,\n          addFolder: this.handleAddFolder,\n          addNote: this.handleAddNote\n        }}>\n          <Header />\n          <div className='content-section'>\n            <nav>\n              <Error>\n                <Route exact path='/' component={MainSidebar} />\n                <Route path='/folder/:folderId' component={MainSidebar} />\n                <Route path='/note/:noteId' component={NoteSidebar} />   \n                <Route path='/add-folder' component={GoBack} />     \n                <Route path='/add-note' component={GoBack} />\n              </Error>      \n            </nav>\n            <main>\n              <Error>\n                <Route exact path='/' component={Main} />\n                <Route path='/folder/:folderId' component={Main} />\n                <Route path='/note/:noteId' component={NoteMain}/>\n                <Route path='/add-folder' component={AddFolder} />     \n                <Route path='/add-note' component={AddNote} />  \n              </Error>\n            </main>\n          </div>\n        </NotefulContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter basename=\"noteful\">\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n    );\n"],"sourceRoot":""}